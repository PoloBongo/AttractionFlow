version: 2.1

# Define the executor to use a Docker container with Unity Builder
executors:
  unity-executor:
    docker:
     - image: unityci/editor:ubuntu-2022.3.32f1-android-3
    resource_class: large

jobs:
  build:
    executor: unity-executor
    steps:
      # Checkout le code depuis le repository
      - checkout

      # Installer Docker
      - run:
          name: Install Docker
          command: |
            sudo apt-get update
            sudo apt-get install -y docker.io
            sudo systemctl start docker
            sudo systemctl enable docker

      # Build Project avec Unity Builder Docker image
      - run:
          name: Build project
          command: |
            export UNITY_SERIAL=${UNITY_SERIAL}
            export UNITY_EMAIL=${UNITY_EMAIL}
            export UNITY_PASSWORD=${UNITY_PASSWORD}

            docker run --rm \
              -e UNITY_EMAIL=$UNITY_EMAIL \
              -e UNITY_PASSWORD=$UNITY_PASSWORD \
              -e UNITY_SERIAL=$UNITY_SERIAL \
              -v $(pwd):/project \
              game-ci/unity-builder:latest \
              --targetPlatform Android

      # Archive Build
      - run:
          name: Archive Build
          command: |
            mkdir -p /tmp/build
            cp -r build/Android/Android.apk /tmp/build/
      - store_artifacts:
          path: /tmp/build
          destination: Build

      # Upload to Dropbox
      - run:
          name: Dropbox Large File Uploader
          command: |
            curl -X POST https://content.dropboxapi.com/2/files/upload \
              --header "Authorization: Bearer ${DROPBOX_REFRESH_TOKEN}" \
              --header "Dropbox-API-Arg: {\"path\": \"/Build/Android.apk\", \"mode\": \"overwrite\", \"autorename\": true, \"mute\": false}" \
              --header "Content-Type: application/octet-stream" \
              --data-binary @build/Android/Android.apk

      # Envoyer le lien sur Discord
      - run:
          name: Envoyer le lien sur Discord
          command: |
            DISCORD_WEBHOOK_URL="${DISCORD_WEBHOOK_URL}"

            MESSAGE_CONTENT="üöÄ **Nouvelle build disponible !**\nüéÆ T√©l√©chargez la derni√®re version de l'APK ici :\nüîó [üì• T√©l√©charger](https://www.dropbox.com/home/Build)"

            curl -s -X POST "$DISCORD_WEBHOOK_URL" \
              -H "Content-Type: application/json" \
              -d "{\"content\": \"$MESSAGE_CONTENT\"}"

      # Supprimer les anciens messages Discord
      - run:
          name: Supprimer les anciens messages du webhook
          command: |
            DISCORD_WEBHOOK_URL="${DISCORD_WEBHOOK_URL}"

            RESPONSE=$(curl -s "$DISCORD_WEBHOOK_URL/messages?limit=10")
            MESSAGE_ID=$(echo "$RESPONSE" | grep -o '"id":"\([^"]*\)"' | head -n 1 | sed 's/"id":"\([^"]*\)"/\1/')

            if [[ -z "$MESSAGE_ID" ]]; then
              echo "‚ùå Aucun message trouv√© ou r√©ponse invalide"
              exit 0
            fi

            curl -X DELETE "$DISCORD_WEBHOOK_URL/messages/$MESSAGE_ID"
            sleep 1

# Workflows to orchestrate the job execution
workflows:
  version: 2
  build-workflow:
    jobs:
      - build:
          filters:
            branches:
              only: main
